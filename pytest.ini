[pytest]
# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Output options
addopts = 
    -v
    --strict-markers
    --tb=short
    --disable-warnings

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    scraper: marks tests that test scraper functionality
    validator: marks tests that test validator functionality
    parser: marks tests that test parser functionality

# Coverage options (when using pytest-cov)
# Run with: pytest --cov
[coverage:run]
source = .
omit = 
    venv/*
    .venv/*
    */tests/*
    */test_*.py
    */__pycache__/*
    */site-packages/*
    setup.py
    */2025-2026/*
    */previous_seasons/*
    scripts/*

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    
    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug
    
    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError
    
    # Don't complain if non-runnable code isn't run:
    if 0:
    if False:
    if __name__ == .__main__.:
    
    # Don't complain about abstract methods
    @(abc\.)?abstractmethod

ignore_errors = True

[coverage:html]
directory = htmlcov
